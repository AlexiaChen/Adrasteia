; Script generated by the HM NIS Edit Script Wizard.
 !include "StrFunc.nsh"
; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "AlexiaChen"
!define PRODUCT_VERSION "1.0"
!define PRODUCT_PUBLISHER "Michigan State University"
!define PRODUCT_WEB_SITE "www.msu.edu"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\makensis.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define INSTALL_DIR_FILENAME "AlexiaChen"

; MUI 1.67 compatible ------
!include "MUI.nsh"
!include "LogicLib.nsh"
!include "x64.nsh"
!include "EnvVarUpdate.nsh"
!include "WinVer.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\uninstall.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
;!insertmacro MUI_PAGE_LICENSE "${NSISDIR}\License.txt"
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
;!define MUI_FINISHPAGE_RUN "$INSTDIR\bin\wlp_exe_gui.exe"
;!define MUI_FINISHPAGE_SHOWREADME "$INSTDIR\readme.txt"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

!echo "Running${out_suffix}"

; MUI end ------

RequestExecutionLevel admin



Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "setup.exe"
InstallDir "$PROGRAMFILES64\${INSTALL_DIR_FILENAME}"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

Section "MainSection" SEC01

   Var /GLOBAL WINDOWS_ARCHITECTURE
   ;GetVersion is a 3rd Plugin with windows DLL version,the author is stop updating it
   ; you should put this dll into NSIS's Plugin Dir of the Installation Dir's  
   GetVersion::WindowsPlatformArchitecture
   Pop $WINDOWS_ARCHITECTURE ; 32 or 64

  ${EnvVarUpdate} $0 "PATH" "A" "HKLM" "$INSTDIR\bin" ; appends to the system path
  
 
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  
  CreateDirectory "$INSTDIR"

  
  File "${NSISDIR}\makensis.exe"
  ;File "${NSISDIR}\License.txt"
  File /r "setup\*"        ; /r thisn option mean that recursion
  ;File /r "DLP4100 FPGA Program file\*"
  File /r "DLP4100 FPGA Program file"

  ;CreateShortCut "$SMPROGRAMS\${INSTALL_DIR_FILENAME}\${INSTALL_DIR_FILENAME}.lnk" "$INSTDIR\makensis.exe"
  ;CreateShortCut "$DESKTOP\${INSTALL_DIR_FILENAME}.lnk" "$INSTDIR\makensis.exe"
  SetOutPath "$INSTDIR\bin"
  CreateShortCut "$DESKTOP\MSU.lnk" "$INSTDIR\bin\AppName.exe"
  
 
  
 ; MessageBox MB_OK "${Version}" 
 ; ${GetWindowsVersion} $R0
  

  
  
  ${If} ${IsWinXP} 
      
      
      ${If}   "$WINDOWS_ARCHITECTURE" != "32"
	      MessageBox MB_OK  "Sorry this application cannot run on this machine architecture!" 
	      Quit ;Exit the whole Installation Process
	  ${EndIf}
	
  ${EndIf}
 
 
 ${If} ${IsWin7}
  ${If} "X$WINDOWS_ARCHITECTURE" != "${Version64}"
      MessageBox MB_OK  "Sorry this application cannot run on this machine architecture!" 
	  Quit ;Exit the whole Installation Process
  ${EndIf}
  
  
 ${EndIf}
  
 ${If} ${IsWin7}
      
      Exec '"$INSTDIR\bin\driver\win7\dpinst.exe" /c /f /se /sw /path "$INSTDIR\bin\driver\win7"'
      ExecWait '"$INSTDIR\bin\vs2010sp1vcredist.exe" /q'

	SetOutPath $INSTDIR\bin\windriver
    ;ExecWait  ' "$INSTDIR\bin\windriver\wdreg" -inf "$INSTDIR\bin\windriver\windrvr6.inf" install'
	;ExecWait  ' "$INSTDIR\bin\windriver\wdreg" -inf "$INSTDIR\bin\windriver\DLC9500.inf" install'
	nsExec::ExecToLog	'wdreg -inf windrvr6.inf install'
	nsExec::ExecToLog	'wdreg -inf DLC9500.inf install'
	  
	DetailPrint ""
	DetailPrint "If you find some error, Please copy the whole text for support."
	DetailPrint "Right click the mouse to copy the entire page."
	DetailPrint "sleep 30 senconds now"
	DetailPrint ""
	
	SetOutPath $INSTDIR
	
	  Sleep 30000
  
 ${EndIf}
 
  
  
  ;${If} ${IsWinXP} 
   
   ;Exec '"$INSTDIR\bin\driver\win7\Psexec.exe"  -i  -d  -s  "$INSTDIR\bin\driver\win7\install_wdf_driver.exe"' 
   ;ExecWait '"$INSTDIR\bin\vs2010sp1vcredist.exe" /q'
 
  ;${EndIf}
  
   ${If} ${IsWinXP} 
   
     
     ExecWait '"$INSTDIR\bin\vs2010sp1vcredist.exe" /q'
	 
	 MessageBox MB_OK "You Must Install Driver manually! The Driver Installation Instruction is located in ReadMe.txt"
 
  ${EndIf}
  
  
  ExecShell open "$INSTDIR\"


   
 
;Detect windows is 32bit or 64bit
 

;${If} ${RunningX64}
; 64bit bits go here
 ; Exec '"$INSTDIR\bin\driver\win7\Psexec.exe"  -i  -d  -s  "$INSTDIR\bin\driver\win7\install_wdf_driver.exe"' 
  ;-i -d -s "$INSTDIR\bin\Driver\win7install_wdf_driver.exe"'
  
  
 ; Exec "$INSTDIR\bin\driver\win7\install_wdf_driver.exe"
  ;ExecWait '"$INSTDIR\bin\vs2010sp1vcredist.exe" /q'
  
;${Else}
; 32bit bits go here
 ;  Exec '"$INSTDIR\bin\driver\win7\Psexec.exe"  -i  -d  -s  "$INSTDIR\bin\driver\win7\install_wdf_driver.exe"' 
 ; ExecWait '"$INSTDIR\bin\vs2010sp1vcredist.exe"   /q'
;${EndIf}
 

  
SectionEnd

Section -AdditionalIcons
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\MyScript\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\MyScript\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\makensis.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\makensis.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) 已成功地从你的计算机移除。"
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "你确实要完全移除 $(^Name) ，其及所有的组件？" IDYES +2
  Abort
FunctionEnd

Function .onInit
     ;dynamically Select the installation's dir by the current windows version
StrCpy $INSTDIR "$PROGRAMFILES32\${INSTALL_DIR_FILENAME}"

${If} ${RunningX64}
  StrCpy $INSTDIR "$PROGRAMFILES64\${INSTALL_DIR_FILENAME}"
${EndIf}

FunctionEnd


Section Uninstall
  ;Delete "$INSTDIR\${PRODUCT_NAME}.url"
  ;Delete "$INSTDIR\uninst.exe"
  ;Delete "$INSTDIR\setup"
  ;Delete "$INSTDIR\License.txt"
  ;Delete "$INSTDIR\makensis.exe"

 ; Delete "$SMPROGRAMS\${INSTALL_DIR_FILENAME}\Uninstall.lnk"
  ;Delete "$SMPROGRAMS\${INSTALL_DIR_FILENAME}\Website.lnk"
  Delete "$DESKTOP\${INSTALL_DIR_FILENAME}.lnk"
  ;Delete "$SMPROGRAMS\${INSTALL_DIR_FILENAME}\${INSTALL_DIR_FILENAME}.lnk"

  
  RMDir  /r "$SMPROGRAMS\${INSTALL_DIR_FILENAME}"
  ;RMDir /r  "$PROGRAMFILES64\${INSTALL_DIR_FILENAME}"
  
  
  RMDir /r "$INSTDIR"   ;this command maybe not safe，if user select $INSTDIR is C:\Program Files , user will go heaven to see god，but the default value is  C:\Program Files\AlexiaChen
  ;Warning: using RMDir /r $INSTDIR in the uninstaller is not safe. 
  ;Though it is unlikely, the user might select to install to the Program Files 
  ;folder and so this command will wipe out the entire Program Files folder, 
  ;including other programs that has nothing to do with the uninstaller. 
  ;The user can also put other files but the program's files and would expect 
  ;them to get deleted with the program. 

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd
